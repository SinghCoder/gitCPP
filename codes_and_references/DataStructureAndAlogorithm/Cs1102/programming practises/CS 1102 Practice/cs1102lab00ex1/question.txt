Notes:  1. This is a practice lab.
        2. You have 200 submissions for this lab.
        3. You should test your program thoroughly before submitting
           to courseMarker.
        4. You should try to practise good programming style by:
	   a. Adding in meaningful comments to document your program.
           b. Make sure that you indent the statements to enhance the
              readability of your program.
           c. Use meaningful identifies.
        5. There is no deadline for this lab.

(Acknowledgement: This problem is taken from acm.uva.es)

The Problem

Consider the following algorithm:

                1. input n

                2. print n

                3. if n = 1 then STOP

                4. if n is odd then n = 3*n + 1

                5. else n = n/2

                6. GOTO 2

Given the input 22, the following sequence of numbers will
be printed 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1

It is conjectured that the algorithm above will terminate 
(when a 1 is printed) for any integral input value. 
Despite the simplicity of the algorithm, it is unknown 
whether this conjecture is true. It has been verified, 
however, for all integers n such that 0 < n < 1,000,000 
(and, in fact, for many more numbers than this.) 

Given an input n, it is possible to determine the number 
of numbers printed (including the 1). For a given n 
this is called the cycle-length of n. In the example above, 
the cycle length of 22 is 16. 

For any two numbers i and j you are to determine the maximum
cycle length over all numbers between i and j. 

The Input

The input will consist of a pair of integers i and j, 
All integers will be less than 1,000,000 and greater than 0. 

You should determine the maximum cycle length over all 
integers between and including i and j. 

You can assume that no operation overflows a 32-bit integer. 

The Output

For each pair of input integers i and j you should output i, j,
and the maximum cycle length for integers between and including 
i and j. These three numbers should be separated by one 
space with all three numbers on one line. The integers i and j 
must appear in the output in the same order in which they 
appeared in the input and should be followed by the maximum 
cycle length (on the same line). 


Sample Input 1

1 10

Sample output 1

1 10 20


Sample input 2

900 1000

Sample Output

900 1000 174

